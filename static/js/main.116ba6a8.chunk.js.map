{"version":3,"sources":["Tables.js","App.js","reportWebVitals.js","index.js"],"names":["Title","Typography","columns","title","dataIndex","key","render","text","tags","map","tag","color","length","toUpperCase","data","name","age","address","Tables","justify","span","style","height","sm","dataSource","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wQAMOA,EAASC,IAATD,MACDE,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAAAC,GAAI,OAAI,4BAAIA,MAEtB,CACEJ,MAAO,MACPC,UAAW,MACXC,IAAK,OAEP,CACEF,MAAO,UACPC,UAAW,UACXC,IAAK,WAEP,CACEF,MAAO,OACPE,IAAK,OACLD,UAAW,OACXE,OAAQ,SAAAE,GAAI,OACV,mCACGA,EAAKC,KAAI,SAAAC,GACR,IAAIC,EAAQD,EAAIE,OAAS,EAAI,WAAa,QAI1C,MAHY,UAARF,IACFC,EAAQ,WAGR,cAAC,IAAD,CAAKA,MAAOA,EAAZ,SACGD,EAAIG,eADiBH,WAW9BI,EAAO,CACX,CACET,IAAK,IACLU,KAAM,aACNC,IAAK,GACLC,QAAS,2BACTT,KAAM,CAAC,OAAQ,cAEjB,CACEH,IAAK,IACLU,KAAM,YACNC,IAAK,GACLC,QAAS,yBACTT,KAAM,CAAC,UAET,CACEH,IAAK,IACLU,KAAM,YACNC,IAAK,GACLC,QAAS,yBACTT,KAAM,CAAC,OAAQ,aAoBJU,EAhBD,WACX,OACE,+BACA,eAAC,IAAD,CAAKC,QAAQ,SAAb,UACE,cAAC,IAAD,CAAKC,KAAM,GAAIC,MAAO,CAACC,OAAO,UACjC,eAAC,IAAD,CAAMF,KAAM,GAAIG,GAAI,CAACH,KAAK,IAA1B,UACA,cAAC,IAAD,UACK,cAACpB,EAAD,uBAEL,cAAC,IAAD,CAAOE,QAASA,EAASsB,WAAYV,aCtE1BW,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS7B,OACP,cAAC,IAAM8B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.116ba6a8.chunk.js","sourcesContent":["\r\nimport { Table, Tag, Space,Row,Col,Typography } from 'antd';\r\n\r\nimport 'antd/dist/antd.css'\r\n\r\n\r\nconst {Title} = Typography\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Age',\r\n    dataIndex: 'age',\r\n    key: 'age',\r\n  },\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'Tags',\r\n    key: 'tags',\r\n    dataIndex: 'tags',\r\n    render: tags => (\r\n      <>\r\n        {tags.map(tag => {\r\n          let color = tag.length > 5 ? 'geekblue' : 'green';\r\n          if (tag === 'loser') {\r\n            color = 'volcano';\r\n          }\r\n          return (\r\n            <Tag color={color} key={tag}>\r\n              {tag.toUpperCase()}\r\n            </Tag>\r\n          );\r\n        })}\r\n      </>\r\n    ),\r\n  },\r\n  \r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n    tags: ['nice', 'developer'],\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n    tags: ['loser'],\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n    tags: ['cool', 'teacher'],\r\n  },\r\n];\r\n\r\nconst Tables =()=>{\r\n   return( \r\n     <body>\r\n     <Row justify=\"center\" >\r\n       <Col span={24} style={{height:\"60px\"}}></Col>\r\n    <Col  span={12} sm={{span:12}}>\r\n    <Typography>\r\n         <Title>Tables</Title>\r\n       </Typography>\r\n    <Table columns={columns} dataSource={data} />\r\n    </Col>\r\n  </Row>\r\n  </body>\r\n   )\r\n}\r\n\r\nexport default Tables;\r\n//ReactDOM.render(<Table columns={columns} dataSource={data} />, mountNode);\r\n/*\r\n <div className=\"space-align-block\" style={{backgroundColor:\"white\"}}>\r\n     <Space align=\"center\">\r\n     <Row >\r\n    <Col  span={6} offset={6}>\r\n    <Typography>\r\n         <Title>Tables</Title>\r\n       </Typography>\r\n    <Table columns={columns} dataSource={data}/>\r\n    </Col>\r\n  </Row>\r\n     </Space>\r\n   </div>\r\n   <div className=\"row \">\r\n      <div className=\"col-lg-6 col-sm-10 offset-lg-3 offset-sm-1\">\r\n      <Table columns={columns} dataSource={data}/>\r\n      </div>\r\n    </div>\r\n    <div className=\"row \">\r\n      <div className=\"col-12\">\r\n    <div className=\"col-sm-6  offset-sm-3\">\r\n    <Table columns={columns} dataSource={data}/>\r\n    </div>\r\n    </div>\r\n  </div>\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    render: (text, record) => (\r\n      <Space size=\"middle\">\r\n        <a>Invite {record.name}</a>\r\n        <a>Delete</a>\r\n      </Space>\r\n    ),\r\n  },\r\n*/\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport Tables from './Tables';\n\nfunction App() {\n  return (\n    <Tables/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}